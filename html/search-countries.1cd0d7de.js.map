{"mappings":"qhBAGe,SAAAA,EAAwBC,GACrC,OAAOC,MAAM,qCAAmBD,oDAAwBE,MAAKC,IAC3D,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAM,0BAElB,OAAOF,EAASG,MAAM,G,+BCH1B,MACMC,EAAO,CACXC,MAAOC,SAASC,cAAc,eAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,KAAMH,SAASC,cAAc,kBAkF/B,SAASG,IACPN,EAAKK,KAAKE,UAAY,GACtBP,EAAKI,KAAKG,UAAY,E,CAjFxBP,EAAKC,MAAMO,iBAAiB,QAASC,EAAAC,EAAA,EAErC,SAAkBC,GAChB,MAAMlB,EAAOkB,EAAEC,OAAOC,MAAMC,OAE5B,IAAKrB,EAEH,YADAa,IAIFd,EAAeC,GACZE,MAAKoB,IACJ,GAAIA,EAAUC,OAAS,GAGrB,OAFAV,SA+ENW,EAAAC,OAAOC,KAAK,6DAA8D,CACxEC,SAAU,gBA7Bd,SAA2BL,GACzB,MAAMM,EAAaN,EAChBO,KACC,EAAC7B,KAAEA,EAAM8B,OAAOC,IAAEA,MAChB,kFACwCA,WAAa/B,oEAChBA,4BAGxCgC,KAAK,IAERzB,EAAKI,KAAKG,UAAYc,EACtBrB,EAAKK,KAAKE,UAAY,E,CA1DlBmB,CAAkBX,GAEO,IAArBA,EAAUC,QAWpB,SAA2BD,GACzB,MAAMtB,KAAEA,EAAI8B,MAAEA,EAAKI,WAAEA,EAAUC,QAAEA,EAAOC,UAAEA,GAAcd,EAAU,GAC5De,EAAgBD,EAAUP,KAAIS,GAAYA,EAAStC,OAAMgC,KAAK,MAE9DO,EAAa,4GAIPT,EAAMC,aACE/B,8DAEC,uBAATA,EAAgCA,EAAO,0LAMzB,WAAZmC,EAAuBA,EAAU,8JAI6BD,oJAGDG,mEAK3E9B,EAAKI,KAAKG,UAAY,GACtBP,EAAKK,KAAKE,UAAYyB,C,CAxChBC,CAAkBlB,EAAU,IAG/BmB,OAAMC,IACLC,QAAQC,IAAIF,GACZ7B,IA4DJW,EAAAC,OAAOoB,QAAQ,2CAA4C,CACzDlB,SAAU,cA5DO,G,GAlCE","sources":["src/js/fetchCountries.js","src/js/search-coutries.js"],"sourcesContent":["const BASE_URL = 'https://restcountries.com/v2/';\nconst SEARCH_PARAMS = '?fields=name,capital,population,flags,languages';\n\nexport default function fetchCountries(name) {\n  return fetch(`${BASE_URL}name/${name}${SEARCH_PARAMS}`).then(response => {\n    if (response.status === 404) {\n      throw new Error('This country not exist');\n    }\n    return response.json();\n  });\n}\n","import '../css/styles.css';\nimport fetchCountries from './fetchCountries';\nimport debounce from 'lodash.debounce';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst DEBOUNCE_DELAY = 300;\nconst refs = {\n  input: document.querySelector('#search-box'),\n  list: document.querySelector('.country-list'),\n  card: document.querySelector('.country-info'),\n};\n\nrefs.input.addEventListener('input', debounce(onSearch, DEBOUNCE_DELAY));\n\nfunction onSearch(e) {\n  const name = e.target.value.trim();\n\n  if (!name) {\n    cleanHtml();\n    return;\n  }\n\n  fetchCountries(name)\n    .then(countries => {\n      if (countries.length > 10) {\n        cleanHtml();\n        notifyInfo();\n        return;\n      }\n\n      renderCountryList(countries);\n\n      if (countries.length === 1) {\n        renderCountryCard(countries);\n      }\n    })\n    .catch(error => {\n      console.log(error);\n      cleanHtml();\n      notifyFailure();\n    });\n}\n\nfunction renderCountryCard(countries) {\n  const { name, flags, population, capital, languages } = countries[0];\n  const languagesName = languages.map(language => language.name).join(', ');\n\n  const cardMarkup = `\n        <div class=\"card\">\n          <div class=\"card__box\">\n            <img class=\"card__img\" src=\"${\n              flags.svg\n            }\" alt=\"${name}\" width=\"30\"></img>\n            <span class=\"card__text\">${\n              name !== 'Russian Federation' ? name : 'Terrorist state'\n            }</span>\n          </div>\n          <ul class=\"list\">\n            <li class=\"list__item\">\n              <p class=\"list__text\">Capital: <span class=\"list__subtext\">${\n                capital !== 'Moscow' ? capital : 'Оркостан'\n              }</span></p>\n            </li>\n            <li class=\"list__item\">\n              <p class=\"list__text\">Population: <span class=\"list__subtext\">${population}</span></p>\n            </li>\n            <li class=\"list__item\">\n              <p class=\"list__text\">Languages: <span class=\"list__subtext\">${languagesName}</span></p>\n            </li>\n          </ul>\n        </div>`;\n\n  refs.list.innerHTML = '';\n  refs.card.innerHTML = cardMarkup;\n}\n\nfunction renderCountryList(countries) {\n  const listMarkup = countries\n    .map(\n      ({ name, flags: { svg } }) =>\n        `<li class=\"country-list__item\">\n          <img class=\"country-list__img\" src=\"${svg}\" alt=\"${name}\" width=\"30\"></img>\n          <span class=\"country-list__text\">${name}</span>\n        </li>`\n    )\n    .join('');\n\n  refs.list.innerHTML = listMarkup;\n  refs.card.innerHTML = '';\n}\n\nfunction cleanHtml() {\n  refs.card.innerHTML = '';\n  refs.list.innerHTML = '';\n}\n\n//==========notify=============================================\nfunction notifyFailure() {\n  Notify.failure('Oops, there is no country with that name', {\n    position: 'center-top',\n  });\n}\n\nfunction notifyInfo() {\n  Notify.info('Too many matches found. Please enter a more specific name.', {\n    position: 'center-top',\n  });\n}\n"],"names":["$6a71b746db257af2$export$2e2bcd8739ae039","name","fetch","then","response","status","Error","json","$c1c68f184cf58b22$var$refs","input","document","querySelector","list","card","$c1c68f184cf58b22$var$cleanHtml","innerHTML","addEventListener","$parcel$interopDefault","$gBkVk","e","target","value","trim","countries","length","$3d49n","Notify","info","position","listMarkup","map","flags","svg","join","$c1c68f184cf58b22$var$renderCountryList","population","capital","languages","languagesName","language","cardMarkup","$c1c68f184cf58b22$var$renderCountryCard","catch","error","console","log","failure"],"version":3,"file":"search-countries.1cd0d7de.js.map"}